name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Caching dependencies
        uses: actions/cache@v1.2.1
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies    
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: 
      script-files: ${{ steps.publist_1.outputs.scripts-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Caching dependencies
        uses: actions/cache@v1.2.1
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}  
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS file name
        id: publist_1
        run: find dist/assets/*.js -type f -execdir echo 'scripts-file={}' >> $GITHUB_OUTPUT ';'
        #run: find dist/assets/*.js -type f -execdir echo '::set-output name=scripts-file::{}' >> $GITHUB_OUTPUT ';  # --> depricated
        #for windows command try later
        #run: find dist/assets/*.js -type f -execdir echo '{}' ';'
        #run: Get-ChildItem -Path 'D:\giHub\gitPractise\01 Starting Project\dist\assets\' -Include "*.js" -Recurse
        #run: Get-ChildItem -Path '.\dist\assets\' -Include "*.js" -Recurse

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
      
        with: 
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Artifacts
        uses: actions/download-artifact@v3
        with: 
          name: dist-files
      - name: Output container
        run: ls
      - name: output file name
        run: echo "${{ needs.build.outputs.script-files }}"
      - name: Deploy
        run: echo "Deploying..."
